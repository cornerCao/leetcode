/*
Given a collection of intervals, merge all overlapping intervals.

For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18].
自己写出来的hard诶哈哈哈哈哈哈
*/
/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
class Solution {
public:
bool static compare(Interval a,Interval b){//overload < 注意一定要static！
    if(a.start!=b.start) return a.start<b.start;
    else return a.end>b.end;
}
int max(int a,int b){
    if(a<b)return b;
    return a;
}
    vector<Interval> merge(vector<Interval>& intervals) {
        sort(intervals.begin(),intervals.end(),compare);
        int len=intervals.size();
        vector<Interval>ans;
        int i=0;
        while(i<len){
            int end=intervals[i].end;
            int start=intervals[i].start;
            i++;
            while(i<len&&intervals[i].start<=end){end=max(end,intervals[i].end);i++;}//一定要更新end 被卡了很久==
            Interval tmp(start,end);
            ans.push_back(tmp);}
        
        return ans;
    }
};
