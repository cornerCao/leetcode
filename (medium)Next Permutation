/*就是找字典序排序在下一位的序列
*1,2,3 → 1,3,2
*3,2,1 → 1,2,3
*1,1,5 → 1,5,1
*其实很容易，字典序就是从第一位开始比，相同就下一位，不同就选那一位排在前面的，嗯仔细看代码想一下就知道了
*/
class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int len=nums.size();
        if(len==1)return;
        int flag=0;
        for(int i=len-1;i>0;i--){
            if(nums[i]>nums[i-1]){
                flag=1;
                int j=i;
                while(j<len-1&&nums[j+1]>nums[i-1])j++;
                int tmp=nums[i-1];
                nums[i-1]=nums[j];
                nums[j]=tmp;
                sort(&nums[i],&nums[len]);//其实i到len-1位是降序排列的，只用reverse一下就可以了，不用sort
                break;
            }
        }
        if(flag==0){
        for(int i=0;2*i<len;i++){
            int tmp=nums[i];
            nums[i]=nums[len-1-i];
            nums[len-1-i]=tmp;
        }
        }
    }
};
