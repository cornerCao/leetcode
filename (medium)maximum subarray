/*
Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.
最大连续子序列和 基本的动归
*/
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int len=nums.size();
        vector<int>record(len);
        record[0]=nums[0];
        for(int i=1;i<len;i++){
            record[i]=nums[i];
            if(record[i-1]>0)record[i]+=record[i-1];
        }
        int ans=record[0];
        for(int i=1;i<len;i++)
        if(ans<record[i])ans=record[i];
        return ans;
    }
};
